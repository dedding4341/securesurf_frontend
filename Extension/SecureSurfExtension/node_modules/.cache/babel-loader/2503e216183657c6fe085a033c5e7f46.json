{"ast":null,"code":"import _slicedToArray from\"/Users/danielcooper/Development/code/hackathon/securesurf_frontend/Extension/SecureSurfExtension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Something from'./something';import Login from'./Login';function Popup(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setLoggedIn=_useState2[1];var token=localStorage.getItem(\"token\");var loginToggle=function loginToggle(){if(loggedIn==true){return/*#__PURE__*/React.createElement(Something,null);}if(loggedIn==false){return/*#__PURE__*/React.createElement(Login,null);}};useEffect(function(){if(token===null){setLoggedIn(false);}else{setLoggedIn(true);}});return/*#__PURE__*/React.createElement(\"div\",null,loginToggle());}export default Popup;","map":{"version":3,"sources":["/Users/danielcooper/Development/code/hackathon/securesurf_frontend/Extension/SecureSurfExtension/src/Popup.js"],"names":["React","useState","useEffect","Something","Login","Popup","props","loggedIn","setLoggedIn","token","localStorage","getItem","loginToggle"],"mappings":"uNAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,eAEcL,QAAQ,CAAC,KAAD,CAFtB,wCAEXM,QAFW,eAEDC,WAFC,eAGlB,GAAIC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CAEA,GAAIC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACpB,GAAGL,QAAQ,EAAI,IAAf,CAAqB,CACjB,mBAAO,oBAAC,SAAD,MAAP,CACH,CAED,GAAGA,QAAQ,EAAI,KAAf,CAAsB,CAClB,mBAAO,oBAAC,KAAD,MAAP,CACH,CACJ,CARD,CAUAL,SAAS,CAAC,UAAM,CACZ,GAAGO,KAAK,GAAK,IAAb,CAAmB,CACfD,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,IAEO,CACHA,WAAW,CAAC,IAAD,CAAX,CACH,CACJ,CANQ,CAAT,CAQA,mBACI,+BACKI,WAAW,EADhB,CADJ,CAKH,CAED,cAAeP,CAAAA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Something from './something'\nimport Login from './Login'\n\nfunction Popup(props) {\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    let token = localStorage.getItem(\"token\");\n\n    let loginToggle = () => {\n        if(loggedIn == true) {\n            return <Something/>\n        }\n\n        if(loggedIn == false) {\n            return <Login/>\n        }\n    }\n\n    useEffect(() => {\n        if(token === null) {\n            setLoggedIn(false)\n        } else {\n            setLoggedIn(true)\n        }\n    })\n\n    return (\n        <div>\n            {loginToggle()}\n        </div>\n    )\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}