{"ast":null,"code":"/*global chrome*/ /* src/content.js */import React from\"react\";import ReactDOM from\"react-dom\";import Frame,{FrameContextConsumer}from\"react-frame-component\";import\"./content.css\";var Main=function Main(){var web_url=\"\";var something=function something(){chrome.tabs.query({active:true,lastFocusedWindow:true},function(tabs){var url=tabs[0].url;console.log(url);// use `url` here inside the callback because it's asynchronous!\n});};return/*#__PURE__*/React.createElement(Frame,{head:[/*#__PURE__*/React.createElement(\"link\",{type:\"text/css\",rel:\"stylesheet\",href:chrome.runtime.getURL(\"/static/css/content.css\")})]},/*#__PURE__*/React.createElement(FrameContextConsumer,null,// Callback is invoked with iframe's window and document instances\nfunction(_ref){var document=_ref.document,window=_ref.window;// Render Children\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"my-extension\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Hello world - My first Extension\"),/*#__PURE__*/React.createElement(\"p\",null,something()));}));};var app=document.createElement(\"div\");app.id=\"my-extension-root\";document.body.appendChild(app);ReactDOM.render(/*#__PURE__*/React.createElement(Main,null),app);app.style.display=\"none\";chrome.runtime.onMessage.addListener(function(request,sender,sendResponse){if(request.message===\"clicked_browser_action\"){toggle();}});function toggle(){if(app.style.display===\"none\"){app.style.display=\"block\";}else{app.style.display=\"none\";}}var website_url=document.URL;var grabUrl=function grabUrl(){console.log(website_url);};window.addEventListener('load',grabUrl);","map":{"version":3,"sources":["/Users/danielcooper/Development/code/hackathon/test_folder/react-chrome-extension-template/src/content.js"],"names":["React","ReactDOM","Frame","FrameContextConsumer","Main","web_url","something","chrome","tabs","query","active","lastFocusedWindow","url","console","log","runtime","getURL","document","window","app","createElement","id","body","appendChild","render","style","display","onMessage","addListener","request","sender","sendResponse","message","toggle","website_url","URL","grabUrl","addEventListener"],"mappings":"AAAA,iB,CACA,oBAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,oBAAhB,KAA4C,uBAA5C,CACA,MAAO,eAAP,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB,CAACC,MAAM,CAAE,IAAT,CAAeC,iBAAiB,CAAE,IAAlC,CAAlB,CAA2D,SAAAH,IAAI,CAAI,CACjE,GAAII,CAAAA,GAAG,CAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQI,GAAlB,CACAC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA;AACD,CAJD,EAKD,CAND,CAQA,mBACE,oBAAC,KAAD,EACE,IAAI,CAAE,cACJ,4BACE,IAAI,CAAC,UADP,CAEE,GAAG,CAAC,YAFN,CAGE,IAAI,CAAEL,MAAM,CAACQ,OAAP,CAAeC,MAAf,CAAsB,yBAAtB,CAHR,EADI,CADR,eASE,oBAAC,oBAAD,MAEI;AACA,cAA0B,IAAvBC,CAAAA,QAAuB,MAAvBA,QAAuB,CAAbC,MAAa,MAAbA,MAAa,CACxB;AACA,mBACE,2BAAK,SAAS,CAAE,cAAhB,eACE,iEADF,cAEE,6BAAIZ,SAAS,EAAb,CAFF,CADF,CAMD,CAXL,CATF,CADF,CA0BD,CArCD,CAuCA,GAAMa,CAAAA,GAAG,CAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAZ,CACAD,GAAG,CAACE,EAAJ,CAAS,mBAAT,CAEAJ,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B,EACAlB,QAAQ,CAACuB,MAAT,cAAgB,oBAAC,IAAD,MAAhB,CAA0BL,GAA1B,EAEAA,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAoB,MAApB,CACAnB,MAAM,CAACQ,OAAP,CAAeY,SAAf,CAAyBC,WAAzB,CAAqC,SAAUC,OAAV,CAAmBC,MAAnB,CAA2BC,YAA3B,CAAyC,CAC5E,GAAIF,OAAO,CAACG,OAAR,GAAoB,wBAAxB,CAAkD,CAChDC,MAAM,GACP,CACF,CAJD,EAKA,QAASA,CAAAA,MAAT,EAAkB,CAChB,GAAId,GAAG,CAACM,KAAJ,CAAUC,OAAV,GAAsB,MAA1B,CAAkC,CAChCP,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAoB,OAApB,CACD,CAFD,IAEO,CACLP,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAoB,MAApB,CACD,CACF,CACD,GAAIQ,CAAAA,WAAW,CAAGjB,QAAQ,CAACkB,GAA3B,CAEA,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBvB,OAAO,CAACC,GAAR,CAAYoB,WAAZ,EACD,CAFD,CAIAhB,MAAM,CAACmB,gBAAP,CAAwB,MAAxB,CAAgCD,OAAhC","sourcesContent":["/*global chrome*/\n/* src/content.js */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Frame, { FrameContextConsumer } from \"react-frame-component\";\nimport \"./content.css\";\nconst Main = () => {\n  let web_url = \"\";\n\n  let something = () => {\n    chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n      let url = tabs[0].url;\n      console.log(url);\n      // use `url` here inside the callback because it's asynchronous!\n    });\n  }\n\n  return (\n    <Frame\n      head={[\n        <link\n          type=\"text/css\"\n          rel=\"stylesheet\"\n          href={chrome.runtime.getURL(\"/static/css/content.css\")}\n        ></link>,\n      ]}\n    >\n      <FrameContextConsumer>\n        {\n          // Callback is invoked with iframe's window and document instances\n          ({ document, window }) => {\n            // Render Children\n            return (\n              <div className={\"my-extension\"}>\n                <h1>Hello world - My first Extension</h1>\n                <p>{something()}</p>\n              </div>\n            );\n          }\n        }\n      </FrameContextConsumer>\n    </Frame>\n  );\n};\n\nconst app = document.createElement(\"div\");\napp.id = \"my-extension-root\";\n\ndocument.body.appendChild(app);\nReactDOM.render(<Main />, app);\n\napp.style.display = \"none\";\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n  if (request.message === \"clicked_browser_action\") {\n    toggle();\n  }\n});\nfunction toggle() {\n  if (app.style.display === \"none\") {\n    app.style.display = \"block\";\n  } else {\n    app.style.display = \"none\";\n  }\n}\nlet website_url = document.URL;\n\nlet grabUrl = () => {\n  console.log(website_url)\n}\n\nwindow.addEventListener('load', grabUrl);\n"]},"metadata":{},"sourceType":"module"}